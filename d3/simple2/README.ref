https://github.com/sandorTuranszky/production-ready-expressjs-server

add youtube video setup
separate app and server to allow for faster testing
https://expressjs.com/en/advanced/best-practice-performance.html#do-logging-correctly


gzip compression: reverse proxy then dont need compression middleware
nginx compression 
debugging: debug module
logging: winston or bunyan
exceptions:try-catch vs promises, use next() to propagate errors through middleware chain
dont use uncaughtException
dont use modules

jshint or jslint to find implicit exceptions like ref errors on undefined variables

add catch() to promise chain. what is equivalent for async await? 

set node.env to production to improve performance by 3x
1) cache view templates
2) cache css files from css extensions
3) generate less verbose eorro messages

use process manager to restart node if it crashed
use init system in OS to restart process manager
can also use init system wo process manager

strongloop process manager
PM2
Forever 


systemd is a linux system and service manager
systemd is the default init system in linux
a systemd service is a unit file, a file ending in .service
used to be /etc/init.d? verify
I think hadoop used to use /etc/init.d

run node app in cluster, use redis to sync state between instances
node has cluster module but better to use node-pm or cluster-service

stronglook process manageer(PM) can use cluster wo modifying code

cache request results
use load balancer
use reverse proxy





